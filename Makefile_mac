# Makefile for the NSGif Project
# gcc compiler

CC = gcc
CFLAGS = -Iinclude
AR = ar
SRC = $(wildcard src/*.c)
OBJ = $(addprefix $(BUILD_DIR)/,$(notdir $(SRC:.c=.o)))
BUILD_DIR = build
STATIC_LIB = $(BUILD_DIR)/libnsgif.a

# Determine the host architecture
HOST_ARCH = $(shell uname -m)

# Define target architectures for universal binary
TARGET_ARCH = x86_64 arm64

# Determine the supported architectures based on the host
ifeq ($(HOST_ARCH),x86_64)
    SUPPORTED_ARCH = x86_64 arm64
else
    SUPPORTED_ARCH = arm64 x86_64
endif

all: $(BUILD_DIR) $(STATIC_LIB)

$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

$(STATIC_LIB): $(OBJ)
	lipo -create $(foreach arch,$(SUPPORTED_ARCH),$(BUILD_DIR)/$(arch)/$(notdir $@)) -output $@

$(BUILD_DIR)/%.o: src/%.c
	mkdir -p $(dir $@)
	$(foreach arch,$(TARGET_ARCH),$(CC) $(CFLAGS) -arch $(arch) -c $< -o $(BUILD_DIR)/$(arch)/$(notdir $@);)

clean:
	rm -rf $(BUILD_DIR)

.PHONY: all clean
